<?xml version="1.0" encoding="utf-8"?>
<root>
    <Note>
        <Id>1</Id>
        <Title>root</Title>
        <Body>ルートノード</Body>
        <ParentId>-1</ParentId>
    </Note>
    <Note>
        <Id>2</Id>
        <Title>TreeNote</Title>
        <Body>TreeNote開発メモ
</Body>
        <ParentId>1</ParentId>
    </Note>
    <Note>
        <Id>3</Id>
        <Title>積み残し</Title>
        <Body>積み残してるタスク</Body>
        <ParentId>2</ParentId>
    </Note>
    <Note>
        <Id>15</Id>
        <Title>実装済み</Title>
        <Body>2014/08/13 IDの採番おかしいっぽい</Body>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>16</Id>
        <Title>優先度高</Title>
        <Body>タイトル編集時にツリー、アドレスバーが更新されない
編集フラグ実装
ドラッグ＆ドロップでノードの移動
ノート追加時、新規ノートのタイトル編集状態に遷移
NoteListでNote選択時にイベントを設定して、アドレスバー、ツリーなどすべて更新されるように</Body>
        <PrevId>15</PrevId>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>17</Id>
        <Title>優先度中</Title>
        <Body>Ctrl+ドラッグ＆ドロップでノードのコピー
テキストが端で折り返すようにする
フィルタ
ノート移動時にツリービューを更新
親ノートの表示について検討（色を変えるなど）</Body>
        <PrevId>16</PrevId>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>18</Id>
        <Title>優先度低</Title>
        <Body>ツリーのコンテキストメニュー
検索
最近使ったファイル
レイアウトちゃんとする
ショートカットキーの設定
アドレスバーの要素数を3以上に対応
ツリーの幅とか手動で変えれるようにしたい
ツリーダブルクリックでタブで開く（仕様策定から）
添付ファイル
htmlビューア
ファイル暗号化
ノードにパスワードつける</Body>
        <PrevId>17</PrevId>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>19</Id>
        <Title>メモ</Title>
        <Body>NoteSheetの「＞」ボタンは、ノード的に中に入るよりもその場で展開する感じのがいいのでは・・・
→フィルタが活きない？というか仕様がめんどくさい気がする→一致してないものはタイトルだけ表示すればいいか？
→これをやったらツリービュー意味ない気が・・・
アドレスバーもいらない気がする
メニューバーも全開閉とフィルタ以外はいらない気がする

ノート欄だけのタブも作る？

一覧として簡潔なタイトルと内容の説明だけ書いておいて、詳細は子ノードで・・・という使い方をするとメニューバーもいる気がする
中に入るボタンもいる（NoteSheetのやつ）

ノートとフォルダで要素を分ける？→いいかもしれない。そういう使い方しかしない気がする。

●ツリーにて
フォルダ選択→中のノートを一覧表示（タイトル・本文）→メニューバーも移動もあり

子ノートはいらない？いる気がする
ノートの要素にタイトル、概要、詳細があればいい？
開閉ボタンを「タイトルのみ」「概要表示」「全文表示」の3段階にする
タイトルバークリック時の動作も3段階にする
→本文の上から何行まで表示みたいな表示モードがあれば概要いらなくない？
で、その何行表示するかは設定項目にする。
NoteSheetの開閉を「開く/閉じる」と「開く/半開き」から選択できるように、というか表示モード切替の追加か

メモにTAB入力したい
コントロール移動は他のキーにやらせる方針で。

フィルタはフォルダ内検索
フィルタ結果は現在のタブを再利用する、というか表示項目を減らすだけ
対象をタイトルか、タイトルと本文から変更可能
検索は現在のフォルダ以下か全体から選択
検索結果は別タブで開く

ツリーは「フォルダのみ表示」を選択できるように。

フォルダ選択時はデフォルトでタイトルのみ表示（設定項目）

ツリービューより上にタブっている？
いらない気がする・・・
【内部構造】作るのであれば保存系の処理はタブに移譲すればいいと思う
検索バーもタブ内に移動する？

ツリーでフォルダを選択したら中のフォルダを上部に表示、下にノートのタイトル表示
フォルダはシングルクリックで潜る
ノートはシングルクリックで開閉
よって、現在の「＞」ボタンはいらない</Body>
        <PrevId>18</PrevId>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>26</Id>
        <Title>まとめ</Title>
        <Body>●NoteSheetの開閉を「開く/閉じる」と「開く/半開き」から選択できるように、というか表示モード切替の追加か
●フォルダ選択時はデフォルトで半開き表示（設定項目）
●ルートノード色分け
●タイトルのボタンは「開く」と「単体表示」
●TAB入力許可
●フィルタ結果は現在のタブを再利用する、というか表示項目を減らすだけ
●検索は現在のフォルダ以下か全体から選択し、検索結果は別タブで開く

▲ツリーは「フォルダのみ表示」を選択できるように。

ツリービューより上にタブっている？
いらない気がする・・・
【内部構造】作るのであれば保存系の処理はタブに移譲すればいいと思う
検索バーもタブ内に移動する？

ツリーでフォルダを選択したら中のフォルダを上部に表示、下にノートのタイトル表示
フォルダはシングルクリックで潜る
ノートはシングルクリックで開閉
よって、現在の「＞」ボタンはいらない

別タブで開くボタンか何か欲しい
ビューからできてほしいオペレーション
・本文の開閉：多分一番使う
→
・開く：
・単体表示：
・別タブで開く：
・タイトル変更：ツリーのみ？
→機会はそう多くない
・順番入れ替え：タイトルドラッグ
→さくっとやりたい

エディットビューと一覧ビューを分ける
一覧ビューは今の形
フィルタが使えるだけで移動は不可
選択時にエディットビューに持ってく
ツリービュー、リストビュー、エディットビューはそれぞれ手動で配置変更可能</Body>
        <PrevId>19</PrevId>
        <ParentId>3</ParentId>
    </Note>
    <Note>
        <Id>4</Id>
        <Title>PHP</Title>
        <Body>PHPに関する情報</Body>
        <PrevId>2</PrevId>
        <ParentId>1</ParentId>
    </Note>
    <Note>
        <Id>5</Id>
        <Title>関数</Title>
        <Body>関数に関する情報</Body>
        <ParentId>4</ParentId>
    </Note>
    <Note>
        <Id>6</Id>
        <Title>日付・時刻</Title>
        <Body>日付・時刻を書式化</Body>
        <ParentId>5</ParentId>
    </Note>
    <Note>
        <Id>9</Id>
        <Title>日付を文字列化（書式化）</Title>
        <Body>string date(string format [, int timestamp])

フォーマット文字

　 説明 戻り値の例
a 午前または午後（小文字） am または pm
A 午前または午後（大文字） AM または PM
d 日。二桁の数字 01 から 31
g 時。12時間単位。先頭にゼロを付けない。 1 から 12
G 時。24時間単位。先頭にゼロを付けない。 0 から 23
h 時。数字。12 時間単位。 01 から 12
H 時。数字。24 時間単位。 00 から 23
i 分。先頭にゼロをつける。 00 から 59
j 日。先頭にゼロをつけない。 1 から 31
L 閏年であるかどうかを表す論理値。 1 なら閏年。0 なら閏年ではない。
m 月。数字。先頭にゼロをつける。 01 から 12
n 月。数字。先頭にゼロをつけない。 1 から 12
s 秒。先頭にゼロをつける。 00 から 59
t 指定した月の日数。 28 から 31
w 曜日。数値。 0 (日曜)から 6 (土曜)
Y 年。4 桁の数字。 例: 1999 や 2003
y 年。2 桁の数字。 例: 99 や 03
サンプル
print date("Y年m月d日 H時i分s秒", time());
以下のように現在時刻がフォーマットされて出力されます。
2003年09月18日 10時52分31秒
現在時刻をフォーマットする場合は以下のように timestamp を省略できます。
print date("Y年m月d日 H時i分s秒");</Body>
        <ParentId>6</ParentId>
    </Note>
    <Note>
        <Id>10</Id>
        <Title>文字列</Title>
        <Body />
        <PrevId>6</PrevId>
        <ParentId>5</ParentId>
    </Note>
    <Note>
        <Id>11</Id>
        <Title>大文字、小文字変換</Title>
        <Body>strtolower -- 文字列を小文字にする
strtoupper -- 文字列を大文字にする

$str = "aAbBa";
$str = strtoupper($str); // $str は AABBA となる
$str = strtolower($str); // $str は aabba となる</Body>
        <ParentId>10</ParentId>
    </Note>
    <Note>
        <Id>12</Id>
        <Title>全角半角変換</Title>
        <Body>1番目の引数で「置き換える対象の文字列」、2番目の引数で「置き換えのオプション(※1)」、3番目の引数で「エンコーディングの指定」を指定する。

$str = "ＡＢＣＤＥＦＧ";
$str2 = mb_convert_kana($str, "a", "UTF-8");

※1置き換えのオプションの種類は以下
a  全角英数字を半角英数字に変換する
A  半角英数字を全角英数字に変換する
c  全角カタカナを全角ひらがなに変換する
C  全角ひらがなを全角カタカナに変換する
k  全角カタカナを半角カタカナに変換する
K  半角カタカナを全角カタカナに変換する
h  全角ひらがなを半角カタカナに変換する
H  半角カタカナを全角ひらがなに変換する
n  全角数字を半角数字に変換する
N  半角数字を全角数字に変換する
r  全角英文字を半角英文字に変換する
R  半角英文字を全角英文字に変換する
n  全角数字を半角数字に変換する
N  半角数字を全角数字に変換する
s  全角スペースを半角スペースに変換する (U+3000 → U+0020)
S  半角スペースを全角スペースに変換する (U+0020 → U+3000)
V  濁点つきの文字を１文字に変換する (K、H と共に利用する）

“a”と”s”を組み合わせて”as”としてオプション指定することも可能。</Body>
        <PrevId>11</PrevId>
        <ParentId>10</ParentId>
    </Note>
    <Note>
        <Id>7</Id>
        <Title>基本構文</Title>
        <Body>基本的な構文</Body>
        <PrevId>5</PrevId>
        <ParentId>4</ParentId>
    </Note>
    <Note>
        <Id>8</Id>
        <Title>switch文</Title>
        <Body>switch ($i) {
    case 0:
        echo "iは0に等しい";
        break;
    case 1:
        echo "iは1に等しい";
        break;
    case 2:
        echo "iは2に等しい";
        break;
    default:
       echo "iは0,1,2に等しくない";
}</Body>
        <ParentId>7</ParentId>
    </Note>
    <Note>
        <Id>25</Id>
        <Title>foreach</Title>
        <Body>foreach (配列変数 as キー変数 =&gt; 値変数){
  実行する処理;
}



$preflist = array('Tokyo' =&gt; '東京', 'Osaka' =&gt; '大阪');

foreach ($preflist as $key =&gt; $value){
  print $key.'=&gt;'.$value;
}
</Body>
        <PrevId>8</PrevId>
        <ParentId>7</ParentId>
    </Note>
    <Note>
        <Id>20</Id>
        <Title>CakePHP</Title>
        <Body />
        <PrevId>7</PrevId>
        <ParentId>4</ParentId>
    </Note>
    <Note>
        <Id>21</Id>
        <Title>Viewを描画しない</Title>
        <Body>$this-&gt;autoRender = FALSE;</Body>
        <ParentId>20</ParentId>
    </Note>
    <Note>
        <Id>13</Id>
        <Title>Linux</Title>
        <Body>Linux系のコマンドなど</Body>
        <PrevId>4</PrevId>
        <ParentId>1</ParentId>
    </Note>
    <Note>
        <Id>14</Id>
        <Title>空き容量を調べる</Title>
        <Body />
        <ParentId>13</ParentId>
    </Note>
    <Note>
        <Id>22</Id>
        <Title>JavaScript</Title>
        <Body />
        <PrevId>13</PrevId>
        <ParentId>1</ParentId>
    </Note>
    <Note>
        <Id>23</Id>
        <Title>Ajax</Title>
        <Body />
        <ParentId>22</ParentId>
    </Note>
    <Note>
        <Id>24</Id>
        <Title>同期通信</Title>
        <Body>オプションに「async: false」を追加

var html = $.ajax({
  url: "some.php",
  async: false
 }).responseText;</Body>
        <ParentId>23</ParentId>
    </Note>
</root>